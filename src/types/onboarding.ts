// src/types/onboarding.ts
// Type definitions for onboarding and tutorial system

export interface OnboardingStep {
  id: string
  title: string
  description: string
  component?: string
  isCompleted: boolean
  isOptional: boolean
  duration?: number // in minutes
  prerequisites?: string[]
  helpContent?: HelpContent
}

export interface OnboardingFlow {
  id: string
  name: string
  description: string
  type: 'first_time' | 'feature_introduction' | 'advanced_tutorial'
  steps: OnboardingStep[]
  totalSteps: number
  estimatedDuration: number // in minutes
  targetUserType: 'first_time_buyer' | 'investor' | 'upgrader' | 'all'
}

export interface UserOnboardingProgress {
  userId: string
  flowId: string
  currentStepId: string
  completedSteps: string[]
  startedAt: Date
  lastActiveAt: Date
  completedAt?: Date
  skipped: boolean
  flowType: OnboardingFlow['type']
}

export interface HelpContent {
  id: string
  title: string
  description: string
  content: string
  contentType: 'markdown' | 'html' | 'video' | 'interactive'
  category: 'getting_started' | 'financial_concepts' | 'advanced_features' | 'troubleshooting'
  tags: string[]
  difficulty: 'beginner' | 'intermediate' | 'advanced'
  estimatedReadTime: number // in minutes
  relatedTopics?: string[]
  lastUpdated: Date
}

export interface ContextualHelp {
  elementId: string
  position: 'top' | 'bottom' | 'left' | 'right' | 'auto'
  title: string
  content: string
  trigger: 'hover' | 'click' | 'focus' | 'auto'
  showCondition?: {
    userType?: string[]
    subscriptionTier?: string[]
    completedSteps?: string[]
    featureFlag?: string
  }
  priority: 'low' | 'medium' | 'high'
  dismissible: boolean
}

export interface TutorialStep {
  id: string
  target: string // CSS selector
  title: string
  content: string
  position: 'top' | 'bottom' | 'left' | 'right' | 'center'
  showSkip: boolean
  showProgress: boolean
  action?: {
    type: 'click' | 'input' | 'wait' | 'navigate'
    element?: string
    value?: string
    timeout?: number
  }
  validation?: {
    type: 'element_exists' | 'value_entered' | 'page_changed'
    selector?: string
    expectedValue?: string
  }
}

export interface InteractiveTutorial {
  id: string
  name: string
  description: string
  category: 'basic_usage' | 'financial_planning' | 'advanced_features'
  steps: TutorialStep[]
  startCondition?: {
    page?: string
    userType?: string[]
    completedOnboarding?: boolean
  }
  completionReward?: {
    points: number
    achievement?: string
    unlockFeature?: string
  }
}

export interface UserHelpPreferences {
  userId: string
  showContextualHelp: boolean
  autoStartTutorials: boolean
  helpLevel: 'minimal' | 'guided' | 'comprehensive'
  preferredLanguage: 'vi' | 'en'
  dismissedHelp: string[]
  completedTutorials: string[]
  lastHelpInteraction: Date
}

export interface OnboardingConfig {
  flows: OnboardingFlow[]
  helpContent: HelpContent[]
  contextualHelp: ContextualHelp[]
  tutorials: InteractiveTutorial[]
  defaultPreferences: Omit<UserHelpPreferences, 'userId' | 'lastHelpInteraction'>
}

// Predefined onboarding flows based on user types
export const ONBOARDING_FLOWS: OnboardingFlow[] = [
  {
    id: 'first_time_user',
    name: 'Ng∆∞·ªùi D√πng M·ªõi',
    description: 'H∆∞·ªõng d·∫´n c∆° b·∫£n cho ng∆∞·ªùi d√πng l·∫ßn ƒë·∫ßu',
    type: 'first_time',
    totalSteps: 5,
    estimatedDuration: 10,
    targetUserType: 'all',
    steps: [
      {
        id: 'welcome',
        title: 'Ch√†o M·ª´ng ƒê·∫øn V·ªõi FinHome',
        description: 'Gi·ªõi thi·ªáu v·ªÅ ·ª©ng d·ª•ng v√† l·ª£i √≠ch',
        isCompleted: false,
        isOptional: false,
        duration: 2
      },
      {
        id: 'profile_setup',
        title: 'Thi·∫øt L·∫≠p H·ªì S∆°',
        description: 'Nh·∫≠p th√¥ng tin c√° nh√¢n v√† m·ª•c ti√™u t√†i ch√≠nh',
        isCompleted: false,
        isOptional: false,
        duration: 3
      },
      {
        id: 'first_plan',
        title: 'T·∫°o K·∫ø Ho·∫°ch ƒê·∫ßu Ti√™n',
        description: 'H∆∞·ªõng d·∫´n t·∫°o k·∫ø ho·∫°ch t√†i ch√≠nh ƒë·∫ßu ti√™n',
        isCompleted: false,
        isOptional: false,
        duration: 5,
        prerequisites: ['profile_setup']
      },
      {
        id: 'explore_features',
        title: 'Kh√°m Ph√° T√≠nh NƒÉng',
        description: 'T√¨m hi·ªÉu c√°c t√≠nh nƒÉng ch√≠nh c·ªßa ·ª©ng d·ª•ng',
        isCompleted: false,
        isOptional: true,
        duration: 3
      },
      {
        id: 'completion',
        title: 'Ho√†n Th√†nh',
        description: 'Ch√∫c m·ª´ng b·∫°n ƒë√£ ho√†n th√†nh onboarding',
        isCompleted: false,
        isOptional: false,
        duration: 1
      }
    ]
  },
  {
    id: 'financial_planning_intro',
    name: 'Gi·ªõi Thi·ªáu L·∫≠p K·∫ø Ho·∫°ch T√†i Ch√≠nh',
    description: 'H∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ l·∫≠p k·∫ø ho·∫°ch t√†i ch√≠nh',
    type: 'feature_introduction',
    totalSteps: 4,
    estimatedDuration: 15,
    targetUserType: 'first_time_buyer',
    steps: [
      {
        id: 'financial_basics',
        title: 'Ki·∫øn Th·ª©c T√†i Ch√≠nh C∆° B·∫£n',
        description: 'T√¨m hi·ªÉu c√°c kh√°i ni·ªám t√†i ch√≠nh quan tr·ªçng',
        isCompleted: false,
        isOptional: false,
        duration: 5
      },
      {
        id: 'plan_creation',
        title: 'T·∫°o K·∫ø Ho·∫°ch',
        description: 'H∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc t·∫°o k·∫ø ho·∫°ch t√†i ch√≠nh',
        isCompleted: false,
        isOptional: false,
        duration: 7
      },
      {
        id: 'scenario_analysis',
        title: 'Ph√¢n T√≠ch K·ªãch B·∫£n',
        description: 'H·ªçc c√°ch so s√°nh v√† ph√¢n t√≠ch c√°c k·ªãch b·∫£n kh√°c nhau',
        isCompleted: false,
        isOptional: true,
        duration: 5
      },
      {
        id: 'action_planning',
        title: 'L·∫≠p K·∫ø Ho·∫°ch H√†nh ƒê·ªông',
        description: 'T·ª´ k·∫ø ho·∫°ch ƒë·∫øn th·ª±c thi',
        isCompleted: false,
        isOptional: false,
        duration: 3
      }
    ]
  }
]

// Help content categories with Vietnamese terminology
export const HELP_CATEGORIES = {
  getting_started: {
    name: 'B·∫Øt ƒê·∫ßu',
    description: 'H∆∞·ªõng d·∫´n c∆° b·∫£n cho ng∆∞·ªùi m·ªõi',
    icon: 'üöÄ'
  },
  financial_concepts: {
    name: 'Kh√°i Ni·ªám T√†i Ch√≠nh',
    description: 'Gi·∫£i th√≠ch c√°c thu·∫≠t ng·ªØ v√† kh√°i ni·ªám t√†i ch√≠nh',
    icon: 'üí°'
  },
  advanced_features: {
    name: 'T√≠nh NƒÉng N√¢ng Cao',
    description: 'H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng c√°c t√≠nh nƒÉng ph·ª©c t·∫°p',
    icon: '‚ö°'
  },
  troubleshooting: {
    name: 'X·ª≠ L√Ω S·ª± C·ªë',
    description: 'Gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ th∆∞·ªùng g·∫∑p',
    icon: 'üîß'
  }
} as const